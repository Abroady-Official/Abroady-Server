generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id        Int      @id(map: "category_pk") @unique(map: "category_id_uindex") @default(autoincrement())
  name      String   @db.VarChar(50)
  isPublic  Boolean  @default(false)
  createdAt DateTime @default(dbgenerated("timezone('Asia/Seoul'::text, now())")) @db.Timestamp(6)
  updatedAt DateTime @default(dbgenerated("timezone('Asia/Seoul'::text, now())")) @db.Timestamp(6)
  Post      Post[]
}

model Post {
  id          Int      @id(map: "post_pk") @unique(map: "post_id_uindex") @default(autoincrement())
  userId      Int
  categoryId  Int
  title       String   @db.VarChar(100)
  content     String?  @db.VarChar(300)
  isAnonymous Boolean  @default(false)
  image       String?  @db.VarChar(500)
  createdAt   DateTime @default(dbgenerated("timezone('Asia/Seoul'::text, now())")) @db.Timestamp(6)
  updatedAt   DateTime @default(dbgenerated("timezone('Asia/Seoul'::text, now())")) @db.Timestamp(6)
  Category    Category @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_category_id_fk")
  User        User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_user_id_fk")
}

model User {
  id           Int       @id(map: "user_pk") @unique(map: "user_id_uindex") @default(autoincrement())
  social       String    @db.VarChar(20)
  email        String?   @db.VarChar(100)
  uuid         Int
  nickname     String?   @db.VarChar(10)
  profileImage String?   @db.VarChar(500)
  bio          String?   @db.VarChar(200)
  refreshToken String    @db.VarChar(500)
  deviceToken  String?   @db.VarChar(500)
  createdAt    DateTime? @default(dbgenerated("timezone('Asia/Seoul'::text, now())")) @db.Timestamp(6)
  updatedAt    DateTime? @default(dbgenerated("timezone('Asia/Seoul'::text, now())")) @db.Timestamp(6)
  Post         Post[]
}
